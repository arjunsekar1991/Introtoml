a <- 42
A <- a * 2  # R is case sensitive
print(a)
cat(A, "\n") # "84" is concatenated with "\n"
if(A>a) # true, 84 > 42
{
cat(A, ">", a, "\n")
}
setwd("~/Github/Introtoml")
dataframe <- read.csv("data_banknote_authentication.txt", header = FALSE)
colnames(dataframe)<- c("Variance","Skewness", "Curtosis", "Entropy","Class")
dataframe$Class<-as.factor(dataframe$Class)
splitData <- sample(2, nrow(dataframe), replace = TRUE, prob = c(0.7,0.3))
trainingData <- dataframe[splitData==1,]
testData <- dataframe[splitData==2,]
library(rpart)
library(rattle)
library(rpart.plot)
install.packages(rpart)
install.packages("rpart")
install.packages("rpart")
install.packages("rattle")
install.packages("rpart.plot")
library(rattle)
library(rpart.plot)
library(rpart)
library(rpart.plot)
tree.train = rpart(class~., data=trainingData)
tree.train = rpart(trainingData$class~., data=trainingData)
tree.train = rpart(Class~., data=trainingData)
fancyRpartPlot(tree.train)
tree.predict <- predict(tree.train, testData, type="class")
library(caret)
confusionMatrix(tree.predict, tree.test$Survived)
confusionMatrix(tree.predict, testData$Survived)
confusionMatrix(tree.predict, testData$Survived)
summary(tree.predict)
tree.predict <- predict(tree.train, testData, type="class")
confusionMatrix(tree.predict, testData$Class)
install.packages('caret', dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
confusionMatrix(tree.predict, testData$Class)
library(caret)
confusionMatrix(tree.predict, testData$Class)
